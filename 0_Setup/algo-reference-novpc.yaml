AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template deploys the algorithmic trading reference architecture

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: algo

  AlphaVantageApiKey:
    Description: Your Alpha Vantage API key for historical data and news sentiment.
    Type: String
    NoEcho: 'true' # This hides the parameter value in console output and history
    Default: Z3TBUBW7GS7WSE2W


Resources:

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub algotrading-demo-${AWS::AccountId}

  ECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${EnvironmentName}_ecr

  AlgorithmicTradingInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      InstanceType: ml.t3.large
      DefaultCodeRepository: https://bitbucket.org/imalinovsky/algorithmic-trading
      RoleArn: !GetAtt SageMakerExecutionRole.Arn
      PlatformIdentifier: notebook-al2-v3

  S3Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: S3 Permission
      Path: /
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::algotrading-demo-${AWS::AccountId}
              - !Sub arn:aws:s3:::algotrading-demo-${AWS::AccountId}/*

  SageMakerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess
        - arn:aws:iam::aws:policy/AmazonKinesisReadOnlyAccess
        - !Ref S3Policy

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  AlgoExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref EnvironmentName

  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: algo_data

  GlueHistDataDaily:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabase
      TableInput:
        Description: Daily Price Data
        Name: hist_data_daily
        Parameters:
          classification: csv
          has_encrypted_data: false
        StorageDescriptor:
          Columns:
            - Name: dt
              Type: string
            - Name: sym
              Type: string
            - Name: open
              Type: double
            - Name: high
              Type: double
            - Name: low
              Type: double
            - Name: close
              Type: double
            - Name: vol
              Type: double
          Compressed: false
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Sub s3://algotrading-demo-${AWS::AccountId}/hist_data_daily
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Parameters:
              field.delim: ','
              skip.header.line.count: '1'
          StoredAsSubDirectories: false
        TableType: EXTERNAL_TABLE

  AthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: MyWorkGroup
      Description: AlgoWorkgroup
      RecursiveDeleteOption: true
      State: ENABLED
      WorkGroupConfiguration:
        RequesterPaysEnabled: true
        ResultConfiguration:
          OutputLocation: !Sub s3://algotrading-demo-${AWS::AccountId}/results/

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: algo
      RetentionInDays: 7

  # GlueHistNewsDailyAlphavantage:
  #   Type: AWS::Glue::Table
  #   Properties:
  #     CatalogId: !Ref AWS::AccountId
  #     DatabaseName: !Ref GlueDatabase
  #     TableInput:
  #       Description: News sentiment scores from Alphavantage
  #       Name: hist_news_daily_alphavantage
  #       Parameters:
  #         classification: iceberg
  #         table_type: ICEBERG
  #         write.metadata.metrics.default: none
  #       StorageDescriptor:
  #         Location: !Sub s3://algotrading-demo-${AWS::AccountId}/algo_data.db/hist_news_daily_alphavantage
  #         InputFormat: org.apache.iceberg.mr.hive.HiveIcebergInputFormat
  #         OutputFormat: org.apache.iceberg.mr.hive.HiveIcebergOutputFormat
  #         SerdeInfo:
  #           SerializationLibrary: org.apache.iceberg.mr.hive.HiveIcebergSerDe
  #           Parameters: {}
  #       TableType: EXTERNAL_TABLE


  # GlueHistOHLCVDailyAlphavantage:
  #   Type: AWS::Glue::Table
  #   Properties:
  #     CatalogId: !Ref AWS::AccountId
  #     DatabaseName: !Ref GlueDatabase
  #     TableInput:
  #       Description: OHLCV Market Data from Alphavantage
  #       Name: hist_ohlcv_daily_alphavantage
  #       Parameters:
  #         classification: iceberg
  #         table_type: ICEBERG
  #         write.metadata.metrics.default: none
  #       StorageDescriptor:
  #         Location: !Sub s3://algotrading-demo-${AWS::AccountId}/algo_data.db/hist_ohlcv_daily_alphavantage
  #         InputFormat: org.apache.iceberg.mr.hive.HiveIcebergInputFormat
  #         OutputFormat: org.apache.iceberg.mr.hive.HiveIcebergOutputFormat
  #         SerdeInfo:
  #           SerializationLibrary: org.apache.iceberg.mr.hive.HiveIcebergSerDe
  #           Parameters: {}
  #       TableType: EXTERNAL_TABLE


  # GlueTablePermissionsHistNewsDaily:
  #   Type: AWS::LakeFormation::Permissions
  #   Properties:
  #     DataLakePrincipal:
  #       DataLakePrincipalIdentifier: !GetAtt SageMakerExecutionRole.Arn
  #     Resource:
  #       TableResource:
  #         CatalogId: !Ref AWS::AccountId
  #         DatabaseName: !Ref GlueDatabase
  #         Name: hist_news_daily_alphavantage
  #     Permissions:
  #       - ALL
  #     PermissionsWithGrantOption:
  #       - ALL


  # GlueTablePermissionsHistOHLCVDaily:
  #   Type: AWS::LakeFormation::Permissions
  #   Properties:
  #     DataLakePrincipal:
  #       DataLakePrincipalIdentifier: !GetAtt SageMakerExecutionRole.Arn
  #     Resource:
  #       TableResource:
  #         CatalogId: !Ref AWS::AccountId
  #         DatabaseName: !Ref GlueDatabase
  #         Name: hist_ohlcv_daily_alphavantage
  #     Permissions:
  #       - ALL
  #     PermissionsWithGrantOption:
  #       - ALL


  GlueETLJobRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AlgoTradingDataAdminRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - glue.amazonaws.com
                - lakeformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: LakeFormationRegisterResourcePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lakeformation:RegisterResource                 
                Resource: !Sub arn:aws:lakeformation:${AWS::Region}:${AWS::AccountId}:resource/algotrading-demo-${AWS::AccountId} # Target the specific S3 bucket


  GluePassRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AllowPassRoleForGlue
      Roles:
        - Ref: GlueETLJobRole  # Or whatever role executes the Glue job
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: arn:aws:iam::616431823260:role/AlgoTradingDataAdminRole

  GlueETLJobNews:
    Type: AWS::Glue::Job
    Properties:
      Name: load-alphavantage-news
      Role: !GetAtt GlueETLJobRole.Arn
      Command:
        Name: glueetl
        ScriptLocation:  !Sub s3://algotrading-demo-${AWS::AccountId}/scripts/dataloaders/load_alphavantage-news.py
        PythonVersion: "3"
      GlueVersion: "5.0"
      MaxRetries: 0
      ExecutionProperty:
        MaxConcurrentRuns: 1
      Timeout: 10
      MaxCapacity: 2.0
      DefaultArguments:
        "--job-language": "python"
        "--BUCKET":  !Sub algotrading-demo-${AWS::AccountId}
        "--enable-glue-datacatalog": "true"      
        "--ALPHAVANTAGE_API_KEY:" !Ref AlphaVantageApiKey
        "--GLUE_DATABASE": !Ref GlueDatabase        

  GlueETLJobOHLCV:
      Type: AWS::Glue::Job
      Properties:
        Name: load-alphavantage-ohlcv
        Role: !GetAtt GlueETLJobRole.Arn
        Command:
          Name: glueetl
          ScriptLocation:  !Sub s3://algotrading-demo-${AWS::AccountId}/scripts/dataloaders/load_alphavantage-ohlcv.py
          PythonVersion: "3"
        GlueVersion: "5.0"
        MaxRetries: 0
        ExecutionProperty:
          MaxConcurrentRuns: 1
        Timeout: 10
        MaxCapacity: 2.0
        DefaultArguments:
          "--job-language": "python"
          "--BUCKET":  !Sub algotrading-demo-${AWS::AccountId}
          "--enable-glue-datacatalog": "true"      
          "--ALPHAVANTAGE_API_KEY": !Ref AlphaVantageApiKey
          "--GLUE_DATABASE": !Ref GlueDatabase


  LakeFormationPermissionsOnDatabase:
    Type: AWS::LakeFormation::Permissions
    Properties:
      DataLakePrincipal:
        DataLakePrincipalIdentifier: !GetAtt GlueETLJobRole.Arn
      Permissions:
        - CREATE_TABLE
        - ALTER
        - DESCRIBE
      Resource:
        DatabaseResource:
          Name: algo_data

  DataLakeAdminSettings:
    Type: AWS::LakeFormation::DataLakeSettings
    Properties:
      Admins:
        - DataLakePrincipalIdentifier: !GetAtt GlueETLJobRole.Arn

  LakeFormationS3Resource:
    Type: AWS::LakeFormation::Resource
    Properties:
      ResourceArn: !Sub arn:aws:s3:::algotrading-demo-${AWS::AccountId}
      RoleArn: !GetAtt GlueETLJobRole.Arn
      UseServiceLinkedRole: false



Outputs:
  ECR:
    Description: A reference to ECR
    Value: !Ref ECR
    Export:
      Name: AlgorithmicTrading-ECR

  S3Bucket:
    Description: A reference to S3 Bucket
    Value: !Ref S3Bucket
    Export:
      Name: AlgorithmicTrading-S3Bucket

  ECSTaskExecutionRole:
    Description: ECSTaskExecutionRole
    Value: !Ref ECSTaskExecutionRole
    Export:
      Name: AlgorithmicTrading-ECSTaskExecutionRole

  AlgoExecutionRole:
    Description: AlgoExecutionRole ARN
    Value: !GetAtt AlgoExecutionRole.Arn
    Export:
      Name: AlgorithmicTrading-AlgoExecutionRole-ARN

  Cluster:
    Description: A reference to the ECS cluster
    Value: !Ref ECSCluster
    Export:
      Name: AlgorithmicTrading-ECSCluster
